mettlerToledoScale1: &mettlerToledoScale1
  # start reading: curl -d "{\"hello\":true}" http://localhost:8081/post/data
  # stop reading: curl -d "{\"hello\":false}" http://localhost:8081/post/data
  name: mettlerToledoScale1
  enabled: !!bool true
  scan_interval: !!int 1000
  connector: Script
  rbe: !!bool true
  init_script: |
    ip = '10.30.83.75';
    port = 1701;
    trigger_value = false;
    trigger_ts = 0;
    is_sim = true;
  deinit_script: ~
  enter_script: |
    if not trigger_value then return end;
    trigger_value = false;
    if is_sim then
      weight = math.random(100);
      units = 'lb';
    else
      local sock = socket.connect(ip, port);
      sock:settimeout(1, 'b');
      sock:send('user admin\r\n');
      sock.receive('*l');
      sock.send('pass admin\r\n');
      sock.receive('*l');
      sock.send('read wt0101\r\n');
      local response = sock.receive('*l');
      sock:close();
      local status, sequence, value = response:match("(%d%d)R(%d%d%d)~%s*(.+)");
      weight, units = value:match("([%d%.]+)~(.+)~");
    end
  exit_script: ~
  items:
    - name: ReadTrigger
      enabled: !!bool true
      rbe: !!bool true
      script: |
        local value, ts = cache_ts('httpServerSource1/postData', false);
        if ts > trigger_ts then
          trigger_value = value;
          trigger_ts = ts;
        end
        return nil;
    - name: Weight
      enabled: !!bool true
      rbe: !!bool true
      script: |
        return weight;
    - name: Units
      enabled: !!bool true
      rbe: !!bool true
      script: |
        return units;
